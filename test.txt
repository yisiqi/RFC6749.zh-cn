diff --git a/Section01/1.1.md b/Section01/1.1.md
index 399ec31..bbfd397 100644
--- a/Section01/1.1.md
+++ b/Section01/1.1.md
@@ -1,5 +1,5 @@
 ## 1.1 角色
-============================
+
 OAuth定义了四种角色：
 - 资源所有者
 
diff --git a/Section01/1.2.md b/Section01/1.2.md
index ec28a63..c1eae2e 100644
--- a/Section01/1.2.md
+++ b/Section01/1.2.md
@@ -1,5 +1,5 @@
 ## 1.2 协议流程
-==============================
+
      +--------+                               +---------------+
      |        |--(A)- Authorization Request ->|   Resource    |
      |        |                               |     Owner     |
diff --git a/Section01/1.3.1.md b/Section01/1.3.1.md
index 11b2c14..9257481 100644
--- a/Section01/1.3.1.md
+++ b/Section01/1.3.1.md
@@ -1,5 +1,5 @@
 ### 1.3.1 授权码
-=======================
+
 授权码通过使用授权服务器做为客户端与资源所有者的中介而获得。客户端不是直接从资源所有者请求授权，而是引导资源所有者至授权服务器（由在[RFC2616][RFC2616]中定义的用户代理），授权服务器之后引导资源所有者带着授权码回到客户端。
 
 在引导资源所有者携带授权码返回客户端前，授权服务器会鉴定资源所有者身份并获得其授权。由于资源所有者只与授权服务器进行身份验证，所以资源所有者的凭据不需要与客户端分享。
diff --git a/Section01/1.3.2.md b/Section01/1.3.2.md
index 158273c..ae9271a 100644
--- a/Section01/1.3.2.md
+++ b/Section01/1.3.2.md
@@ -1,5 +1,5 @@
 ### 1.3.2 隐式许可
-=========================
+
 隐式许可是为用如JavaScript等脚本语言在浏览器中实现的客户端而优化的一种简化的授权码流程。在隐式许可流程中，不再给客户端颁发授权码，取而代之的是客户端直接被颁发一个访问令牌（作为资源所有者的授权）。这种许可类型是隐式的，因为没有中间凭据（如授权码）被颁发（之后用于获取访问令牌）。
 
 当在隐式许可流程中颁发访问令牌时，发授权服务器不对客户端进行身份验证。在某些情况下，客户端身份可以通过用于向客户端传送访问令牌的重定向URI验证。访问令牌可能会暴露给资源所有者，或者对资源所有者的用户代理有访问权限的其他应用程序。
diff --git a/Section01/1.3.3.md b/Section01/1.3.3.md
index f70d0f5..fd6c8a7 100644
--- a/Section01/1.3.3.md
+++ b/Section01/1.3.3.md
@@ -1,5 +1,5 @@
 ### 1.3.3 资源所有者密码凭据
-==================================
+
 资源所有者密码凭据（即用户名和密码），可以直接作为获取访问令牌的授权许可。这种凭据只能应该当资源所有者和客户端之间具有高度信任时（例如，客户端是设备的操作系统的一部分，或者是一个高度特权应用程序），以及当其他授权许可类型（例如授权码）不可用时被使用。
 
 尽管本授权类型需要对资源所有者凭据直接的客户端访问权限，但资源所有者凭据仅被用于一次请求并被交换为访问令牌。通过凭据和长期有效的访问令牌或刷新令牌的互换，这种许可类型可以消除客户端存储资源所有者凭据供将来使用的需要。
diff --git a/Section01/1.3.4.md b/Section01/1.3.4.md
index ee50247..65fcdff 100644
--- a/Section01/1.3.4.md
+++ b/Section01/1.3.4.md
@@ -1,5 +1,5 @@
 ### 1.3.4 客户端凭据
-====================
+
 当授权范围限于客户端控制下的受保护资源或事先与授权服务器商定的受保护资源时客户端凭据可以被用作为一种授权许可。典型的当客户端代表自己表演（客户端也是资源所有者）或者基于与授权服务器事先商定的授权请求对受保护资源的访问权限时，客户端凭据被用作为授权许可。
 
 ## Links
diff --git a/Section01/1.3.md b/Section01/1.3.md
index 5cda45e..ae24759 100644
--- a/Section01/1.3.md
+++ b/Section01/1.3.md
@@ -1,5 +1,5 @@
 ## 1.3 授权许可
-======================
+
 授权许可是一个代表资源所有者授权（访问受保护资源）的凭据，客户端用它来获取访问令牌。本规范定义了四种许可类型——授权码、隐式许可、资源所有者密码凭据和客户端凭据——以及用于定义其他类型的可扩展性机制。
 
 - 1.3.1. [授权码](1.3.1.md)
diff --git a/Section01/1.4.md b/Section01/1.4.md
index d5f590a..def31ab 100644
--- a/Section01/1.4.md
+++ b/Section01/1.4.md
@@ -1,5 +1,5 @@
 ## 1.4 访问令牌
-==========================
+
 访问令牌是用于访问受保护资源的凭据。访问令牌是一个代表向客户端颁发的授权的字符串。该字符串通常对于客户端是不透明的。令牌代表了访问权限的由资源所有者许可并由资源服务器和授权服务器实施的具体范围和期限。
 
 令牌可以表示一个用于检索授权信息的标识符或者可以以可验证的方式自包含授权信息（即令牌字符串由数据和签名组成）。额外的身份验证凭据——在本规范范围以外——可以被要求以便客户端使用令牌。
diff --git a/Section01/1.5.md b/Section01/1.5.md
index bd37972..3a16ece 100644
--- a/Section01/1.5.md
+++ b/Section01/1.5.md
@@ -1,5 +1,5 @@
 ## 1.5 刷新令牌
-==================
+
 刷新令牌是用于获取访问令牌的凭据。刷新令牌由授权服务器颁发给客户端，用于在当前访问令牌失效或过期时，获取一个新的访问令牌，或者获得相等或更窄范围的额外的访问令牌（访问令牌可能具有比资源所有者所授权的更短的生命周期和更少的权限）。颁发刷新令牌是可选的，由授权服务器决定。如果授权服务器颁发刷新令牌，在颁发访问令牌时它被包含在内（即图1中的步骤D）。
 
 刷新令牌是一个代表由资源所有者给客户端许可的授权的字符串。该字符串通常对于客户端是不透明的。该令牌表示一个用于检索授权信息的标识符。不同于访问令牌，刷新令牌设计只与授权服务器使用，并不会发送到资源服务器。
diff --git a/Section01/1.6.md b/Section01/1.6.md
index 7a8b0fd..f51ba09 100644
--- a/Section01/1.6.md
+++ b/Section01/1.6.md
@@ -1,5 +1,5 @@
 ## 1.6 TLS版本
-================
+
 本规范任何时候使用传输层安全性（TLS），基于广泛的部署和已知的安全漏洞TLS的相应版本（或多个版本）将会随时间而变化。在本规范撰写时，TLS 1.2版[RFC5246][RFC5246]是最新的版本，但它具有非常局限的部署基础，可能还未准备好可以实现。TLS 1.0版[RFC2246][RFC2246]是部署最广泛的版本并将提供最宽泛的互操作性。
 
 实现也可以支持满足其安全需求的其他传输层安全机制。
diff --git a/Section01/1.7.md b/Section01/1.7.md
index e4d1273..c9f7ac8 100644
--- a/Section01/1.7.md
+++ b/Section01/1.7.md
@@ -1,5 +1,5 @@
 ## 1.7 HTTP重定向
-===================
+
 本规范广泛采用了HTTP重定向，有此客户端或授权服务器引导资源所有者的用户代理到另一个目的地址。虽然本规范中的例子演示了HTTP 302状态码的使用，但是任何其他通过用户代理完成重定向的方法都是允许的并被考虑作为实现细节。
 
 ## Links
diff --git a/Section01/1.8.md b/Section01/1.8.md
index 2d76948..8d11b11 100644
--- a/Section01/1.8.md
+++ b/Section01/1.8.md
@@ -1,5 +1,5 @@
 ## 1.8 互操作性
-==============================
+
 OAuth 2.0提供了丰富的具有明确的安全性质的授权框架。然而，尽管在其自身看来是一个带有许多可选择组件的丰富且高度可扩展的框架，本规范有可能产生许多非可互操作的实现。
 
 此外，本规范中留下一些必需组件部分或完全没有定义（例如，客户端注册、授权服务器性能、端点发现等）。没有这些组件，客户端必须针对特定的授权服务器和资源服务器被手动并专门配置，以进行互操作。
diff --git a/Section01/1.9.md b/Section01/1.9.md
index 6dd71e1..3c9d4a1 100644
--- a/Section01/1.9.md
+++ b/Section01/1.9.md
@@ -1,5 +1,5 @@
 ## 1.9 符号约定
-==================
+
 本规范中的关键词“必须”、“不能”、“必需的”、“要”、“不要”、“应该”、“不应该”、“推荐的”、“可以”以及“可选的”按[RFC2119][RFC2119]所述解释。
 本规范使用[RFC5234][RFC5234]的扩展巴科斯-诺尔范式(ABNF)表示法。此外，来自“统一资源标识符（URI）：通用语法”[RFC3986][RFC3986]的规则URI引用也包含在内。
 
diff --git a/Section01/1.md b/Section01/1.md
index 89230a5..687db73 100644
--- a/Section01/1.md
+++ b/Section01/1.md
@@ -1,5 +1,5 @@
 # 1 简介
-=========================
+
 在传统的客户端-服务器身份验证模式中，客户端请求服务器上访问受限的资源（受保护的资源）时，需要使用资源所有者的凭据在服务器上进行身份验证。
 资源所有者为了给第三方应用提供受限资源的访问权限，需要与第三方共享它的凭据。这就导致一些问题和局限：
 - 第三方应用需要存储资源所有者的凭据以供将来使用。该凭据通常是明文密码。
diff --git a/Section02/2.1.md b/Section02/2.1.md
index 630dd4c..82621b6 100644
--- a/Section02/2.1.md
+++ b/Section02/2.1.md
@@ -1,5 +1,5 @@
 ## 2.1 客户端类型
-==============
+
 根据客户端与授权服务器安全地进行身份验证的能力（即维护客户端凭据机密性的能力），OAuth定义了两种客户端类型：
 - 机密客户端  
   能够维持其凭据机密性（如客户端执行在具有对客户端凭据有限访问权限的安全的服务器上），或者能够使用    其他方式保证客户端身份验证的安全性。
diff --git a/Section02/2.2.md b/Section02/2.2.md
index 9e154a9..f9db033 100644
--- a/Section02/2.2.md
+++ b/Section02/2.2.md
@@ -1,5 +1,5 @@
 ## 2.2 客户端标识
-==========================
+
 授权服务器颁发给已注册客户端客户端标识——一个代表客户端提供的注册信息的唯一字符串。客户端标识不是一个秘密，它暴露给资源所有者并且不能单独用于客户端身份验证。客户端标识对于授权服务器是唯一的。
 
 客户端的字符串大小本规范未定义。客户端应该避免对标识大小做假设。授权服务器应记录其发放的任何标识的大小。
\ No newline at end of file
diff --git a/Section02/2.3.1.md b/Section02/2.3.1.md
index 1c1385d..f2feddb 100644
--- a/Section02/2.3.1.md
+++ b/Section02/2.3.1.md
@@ -1,5 +1,5 @@
 ### 2.3.1 客户端密码
-================================
+
 拥有客户端密码的客户端可以使用[RFC2617][RFC2617]中定义的HTTP基本身份验证方案与授权服务器进行身份验证。客户端标识使用按照[附录B](../AppendixB/b.md)的“application/x-www-form-urlencoded”编码算法编码，编码后的值用作用户名；客户端密码使用相同的算法编码并用作密码。授权服务器必须支持HTTP基本身份验证方案，用于验证被颁发客户端密码的客户端的身份。例如（额外的换行仅用于显示目的）：
 
      Authorization: Basic czZCaGRSa3F0Mzo3RmpmcDBaQnIxS3REUmJuZlZkbUl3
diff --git a/Section02/2.3.2.md b/Section02/2.3.2.md
index ac346fc..1457f7f 100644
--- a/Section02/2.3.2.md
+++ b/Section02/2.3.2.md
@@ -1,3 +1,3 @@
 ### 2.3.2 其他身份验证方法
-======================
+
 授权服务器可以支持任何与其安全要求匹配的合适的HTTP身份验证方案。当使用其他身份验证方法时，授权服务器必须定义客户端标识（注册记录）和认证方案之间的映射。
\ No newline at end of file
diff --git a/Section02/2.3.md b/Section02/2.3.md
index 630259f..572b423 100644
--- a/Section02/2.3.md
+++ b/Section02/2.3.md
@@ -1,5 +1,5 @@
 ## 2.3 客户端身份验证
-===============================
+
 如果客户端类型是机密的，客户端和授权服务器建立适合于授权服务器的安全性要求的客户端身份验证方法。授权服务器可以接受符合其安全要求的任何形式的客户端身份验证。
 
 机密客户端通常颁发（或建立）一组客户端凭据用于与授权服务器进行身份验证（例如，密码、公/私钥对）。授权服务器可以与公共客户端建立客户端身份验证方法。然而，授权服务器不能依靠公共客户端身份验证达到识别客户端的目的。
diff --git a/Section02/2.4.md b/Section02/2.4.md
index 049acb9..6e86e63 100644
--- a/Section02/2.4.md
+++ b/Section02/2.4.md
@@ -1,3 +1,3 @@
 ## 2.4 未注册客户端
-============================
+
 本规范不排除使用未注册的客户端。然而，使用这样的客户端超出了本规范的范围，并需要额外的安全性分析并审查其互操作性影响。
\ No newline at end of file
diff --git a/Section02/2.md b/Section02/2.md
index c110090..7ed56e9 100644
--- a/Section02/2.md
+++ b/Section02/2.md
@@ -1,5 +1,5 @@
 2 客户端注册
-=========================
+
 在开始协议前，客户端在授权服务器注册。客户端在授权服务器上注册所通过的方式超出了本规范，但典型的涉及到最终用户与HTML注册表单的交互。
 
 客户端注册不要求客户端与授权服务器之间的直接交互。在授权服务器支持时，注册可以依靠其他方式来建立信任关系并获取客户端的属性（如重定向URI、客户端类型）。例如，注册可以使用自发行或第三方发行声明或通过授权服务器使用信任通道执行客户端发现完成。
@@ -9,7 +9,6 @@
 - 提供它的如[3.1.2](../Section03/3.1.2.md)节所述的客户端重定向URI，且
 - 包含授权服务器要求的任何其他信息（如，应用名称、网址、描述、Logo图片、接受法律条款等）。
 
-
 - 2.1. [客户端类型](2.1.md)
 - 2.2. [客户端标识](2.2.md)
 - 2.3. [客户端身份验证](2.3.md)
diff --git a/Section03/3.1.1.md b/Section03/3.1.1.md
index 2c1c1e6..ab884c2 100644
--- a/Section03/3.1.1.md
+++ b/Section03/3.1.1.md
@@ -1,5 +1,5 @@
 ### 3.1.1 响应类型
-=======================
+
 授权端点被授权码许可类型和隐式许可类型流程使用。客户端使用下列参数通知授权服务器期望的许可类型：
 - response_type    
   必需的。其值必须是如[4.1.1](../Section04/4.1.1.md)节所述用于请求授权码的“code”，如[4.2.1](../Section04/4.2.1.md)节所述用于请求访问令牌的“token”（隐式许可）或者如[8.4](../Section08/8.4.md)节所述的一个注册的扩展值之中的一个。
diff --git a/Section03/3.1.2.1.md b/Section03/3.1.2.1.md
index 546c356..88d0bd1 100644
--- a/Section03/3.1.2.1.md
+++ b/Section03/3.1.2.1.md
@@ -1,5 +1,5 @@
 #### 3.1.2.1 端点请求的机密性
-=====================
+
 当所请求的响应类型是“code”或“token”时，或者当重定向请求将引起在蜜柑凭据通过公开网络传输时，重定向端点应该要求使用[1.6](../Section01/1.6.md)节所述的TLS。本规范没有强制使用TLS，因为在撰写本规范时，要求客户端部署TLS对于许多客户端开发者是一严重的困难。如果TLS不可用，授权服务器应该在重定向之前警告资源所有者有关非安全端点（例如，在授权请求期间现实一条信息）。
 
 缺乏传输层安全可能对客户端及它被授权访问的受保护资源的安全具有严重影响。当授权过程用作一种客户端委托的对最终用户认证（例如，第三方登录服务）的形式时，使用传输层安全尤其关键。
\ No newline at end of file
diff --git a/Section03/3.1.2.2.md b/Section03/3.1.2.2.md
index d1db156..95914ab 100644
--- a/Section03/3.1.2.2.md
+++ b/Section03/3.1.2.2.md
@@ -1,5 +1,5 @@
 #### 3.1.2.2 注册要求
-===================
+
 授权服务器必须要求下列客户端注册它们的重定向端点：
 - 公开客户端。
 - 采用隐式许可类型的机密客户端。
diff --git a/Section03/3.1.2.3.md b/Section03/3.1.2.3.md
index 53b4e9a..40f594a 100644
--- a/Section03/3.1.2.3.md
+++ b/Section03/3.1.2.3.md
@@ -1,5 +1,5 @@
 #### 3.1.2.3 动态配置
-==================
+
 如果多个重定向URI被注册，或者如果只有部分重定向URI被注册，或者如果没有重定向URI被注册，客户端都必须使用“redirect_uri”请求参数在授权请求中包含重定向URI。
 
 当重定向URI被包含在授权请求中时，若有任何重定向URI被注册，授权服务器必须将接收到的值与至少一个已注册的重定向URI（或URI部分）按[RFC3986第6节][RFC3986#6]所述进行比较并匹配。如果客户端注册包含了完整的重定向URI，授权服务器必须使用[RFC3986第6.2.1节][RFC3986#6.2.1]中定义的简单字符串比较法比对这两个URI 。
diff --git a/Section03/3.1.2.4.md b/Section03/3.1.2.4.md
index 731c526..785ae10 100644
--- a/Section03/3.1.2.4.md
+++ b/Section03/3.1.2.4.md
@@ -1,3 +1,3 @@
 #### 3.1.2.4 无效端点
-====================
+
 如果由于缺失、无效或不匹配的重定向URI而验证失败，授权服务器应该通知资源所有者该错误且不能向无效的重定向URI自动重定向用户代理。
\ No newline at end of file
diff --git a/Section03/3.1.2.5.md b/Section03/3.1.2.5.md
index 3466713..585f8dd 100644
--- a/Section03/3.1.2.5.md
+++ b/Section03/3.1.2.5.md
@@ -1,5 +1,5 @@
 #### 3.1.2.5 端点内容
-====================
+
 向客户端端点的重定向请求通常会引起由用户代理处理的HTML文档响应。如果HTML响应直接作为重定向请求的服务结果，任何包含在HTML文档中的脚本将执行，并具有对重定向URI和其包含的凭据的完全访问权限。
 
 客户端不应该在重定向端点的响应中包含任何第三方的脚本（例如，第三方分析、社交插件、广告网络）。相反，它应该从URI中提取凭据并向另一个端点重定向用户代理而不暴露凭据（在URI中或其他地方）。如果包含第三方脚本，客户端必须确保它自己的脚本（用于从URI中提取凭据并从URI中删除）将首先执行。
\ No newline at end of file
diff --git a/Section03/3.1.2.md b/Section03/3.1.2.md
index 30c8ae3..369d3fd 100644
--- a/Section03/3.1.2.md
+++ b/Section03/3.1.2.md
@@ -1,5 +1,5 @@
 ### 3.1.2 重定向端点
-======================
+
 在完成与资源所有者的交互后，授权服务器引导资源所有者的用户代理返回到客户端。授权服务器重定向用户代理至客户端的重定向端点，该端点是事先在客户端注册过程中或者当发起授权请求时与授权服务器建立的。
 
 重定向端点URI必须是如[RFC3986的3.4节][RFC3986#3.4]所述的绝对URI。端点URI可以包含“application/x-www-form-urlencoded”格式（按[附录B](../AppendixB/b.md)）的查询部分（[RFC3986的3.4节][RFC3986#3.4]），当添加额外的查询参数时必须保留该部分。端点URI不得包含片段部分。
diff --git a/Section03/3.1.md b/Section03/3.1.md
index af53284..84edc47 100644
--- a/Section03/3.1.md
+++ b/Section03/3.1.md
@@ -1,5 +1,5 @@
 ## 3.1 授权端点
-===============================
+
 授权端点用于与资源所有者交互获取授权许可。 授权服务器必须先验证资源所有者的身份。 授权服务器对资源所有者进行身份验证的方式（例如，用户名和密码登录、会话cookies）超出了本规范的范围。
 
 客户端通过何种方式获得授权端点的位置超出了本文档范围，但该位置通常在服务文档中提供。
diff --git a/Section03/3.2.1.md b/Section03/3.2.1.md
index 941c8ff..eebcb29 100644
--- a/Section03/3.2.1.md
+++ b/Section03/3.2.1.md
@@ -1,5 +1,5 @@
 ### 3.2.1 客户端身份验证
-======================
+
 在向令牌端点发起请求时，机密客户端或其他被颁发客户端凭据的客户端必须如[2.3](../Section02/2.3.md)节所述与授权服务器进行身份验证。客户端身份验证用于：
 - 实施刷新令牌和授权码到它们被颁发给的客户端的绑定。当授权码在不安全通道上向重定向端点传输时，或者 当重定向URI没有被完全注册时，客户端身份验证是关键的。
 - 通过禁用客户端或者改变其凭据从被入侵的客户端恢复，从而防止攻击者滥用被盗的刷新令牌。改变单套客户端凭据显然快于撤销一整套刷新令牌。
diff --git a/Section03/3.2.md b/Section03/3.2.md
index 6885526..140617e 100644
--- a/Section03/3.2.md
+++ b/Section03/3.2.md
@@ -1,5 +1,5 @@
 ## 3.2 令牌端点
-================
+
 客户端通过提交它的授权许可或刷新令牌使用令牌端点获取访问令牌。令牌端点被用于除了隐式许可类型（因为访问令牌是直接颁发的）外的每种授权许可中。
 
 客户端通过何种方式获得令牌端点的位置超出了本文档范围，但该位置通常在服务文档中提供。
diff --git a/Section03/3.3.md b/Section03/3.3.md
index 9e7e633..e0d37b8 100644
--- a/Section03/3.3.md
+++ b/Section03/3.3.md
@@ -1,5 +1,5 @@
 ## 3.3 访问令牌范围
-===============================
+
 授权端点和令牌端点允许客户端使用“scope”请求参数指定访问请求的范围。反过来，授权服务器使用“scope”响应参数通知客户端颁发的访问令牌的范围。
 
 范围参数的值表示为以空格分隔，大小写敏感的字符串。 由授权服务器定义该字符串。如果该值包含多个空格分隔的字符串，他们的顺序并不重要且每个字符串为请求的范围添加一个额外的访问区域。
diff --git a/Section03/3.md b/Section03/3.md
index 783b755..e932dd0 100644
--- a/Section03/3.md
+++ b/Section03/3.md
@@ -1,5 +1,5 @@
 # 3 协议端点
-============================
+
 授权过程采用了两种授权服务器端点（HTTP资源）：
 - 授权端点——客户端用其通过用户代理重定向从资源所有者获取授权。
 - 令牌端点——客户端用其将授权许可交换为访问令牌，通常伴有客户端身份验证。
diff --git a/Section04/4.1.1.md b/Section04/4.1.1.md
index 4391c41..75fd83c 100644
--- a/Section04/4.1.1.md
+++ b/Section04/4.1.1.md
@@ -1,5 +1,5 @@
 ### 4.1.1 授权请求
-=========================
+
 客户端通过按[附录B](../AppendixB/b.md)使用“application/x-www-form-urlencoded”格式向授权端点URI的查询部分添加下列参数构造请求URI：
 - response_type    
   必需的。值必须被设置为“code”。
diff --git a/Section04/4.1.2.1.md b/Section04/4.1.2.1.md
index 73d2f03..2f18c9a 100644
--- a/Section04/4.1.2.1.md
+++ b/Section04/4.1.2.1.md
@@ -1,5 +1,5 @@
 #### 4.1.2.1 错误响应
-================
+
 如果由于缺失、无效或不匹配的重定向URI而请求失败，或者如果客户端表示缺失或无效，授权服务器应该通知资源所有者该错误且不能向无效的重定向URI自动重定向用户代理。
 
 如果资源所有者拒绝访问请求，或者如果请求因为其他非缺失或无效重定向URI原因而失败，授权服务器通过按[附录B](../AppendixB/b.md)使用“application/x-www-form-urlencoded”格式向重定向URI的查询部分添加下列参数通知客户端：
diff --git a/Section04/4.1.2.md b/Section04/4.1.2.md
index 29c89fe..af205cc 100644
--- a/Section04/4.1.2.md
+++ b/Section04/4.1.2.md
@@ -1,5 +1,5 @@
 ### 4.1.2 授权响应
-=======================
+
 如果资源所有者许可访问请求，授权服务器颁发授权码，通过按[附录B](../AppendixB/b.md)使用“application/x-www-form-urlencoded”格式向重定向URI的查询部分添加下列参数传递授权码至客户端：
 - code    
   必需的。授权服务器生成的授权码。授权码必须在颁发后很快过期以减小泄露风险。推荐的最长的授权码生命周期是10分钟。客户端不能使用授权码超过一次。如果一个授权码被使用一次以上，授权服务器必须拒绝该请求并应该撤销（如可能）先前发出的基于该授权码的所有令牌。授权码与客户端标识和重定向URI绑定。
diff --git a/Section04/4.1.3.md b/Section04/4.1.3.md
index 1fb4fef..049a907 100644
--- a/Section04/4.1.3.md
+++ b/Section04/4.1.3.md
@@ -1,5 +1,5 @@
 ### 4.1.3 访问令牌请求
-=========================
+
 客户端通过使用按[附录B](../AppendixB/b.md)“application/x-www-form-urlencoded”格式在HTTP请求实体正文中发送下列UTF-8字符编码的参数向令牌端点发起请求：
 - grant_type    
   必需的。值必须被设置为“authorization_code”。
diff --git a/Section04/4.1.4.md b/Section04/4.1.4.md
index ca4d6aa..9634983 100644
--- a/Section04/4.1.4.md
+++ b/Section04/4.1.4.md
@@ -1,5 +1,5 @@
 ### 4.1.4 访问令牌响应
-===========================
+
 如果访问令牌请求是有效的且被授权，授权服务器如5.1节所述颁发访问令牌以及可选的刷新令牌。如果请求客户端身份验证失败或无效，授权服务器如5.2节所述的返回错误响应。
 
 一个样例成功响应：
diff --git a/Section04/4.1.md b/Section04/4.1.md
index 91572ef..5dff98e 100644
--- a/Section04/4.1.md
+++ b/Section04/4.1.md
@@ -1,5 +1,5 @@
 ## 4.1 授权码许可
-====================
+
 授权码许可类型用于获得访问令牌和刷新令牌并且为受信任的客户端进行了优化。由于这是一个基于重定向的流程，客户端必须能够与资源所有者的用户代理（通常是Web浏览器）进行交互并能够接收来自授权服务器的传入请求（通过重定向）。
 
      +----------+
diff --git a/Section04/4.2.1.md b/Section04/4.2.1.md
index c2e5deb..33eb467 100644
--- a/Section04/4.2.1.md
+++ b/Section04/4.2.1.md
@@ -1,5 +1,5 @@
 ### 4.2.1 授权请求
-========================
+
 客户端通过按[附录B](../AppendixB/b.md)使用“application/x-www-form-urlencoded”格式向授权端点URI的查询部分添加下列参数构造请求URI：
 - response_type    
   必需的。值必须设置为“token”。
diff --git a/Section04/4.2.2.1.md b/Section04/4.2.2.1.md
index 4478f24..cc97d95 100644
--- a/Section04/4.2.2.1.md
+++ b/Section04/4.2.2.1.md
@@ -1,5 +1,5 @@
 #### 4.2.2.1 错误响应
-=========================
+
 如果由于缺失、无效或不匹配的重定向URI而请求失败，或者如果客户端表示缺失或无效，授权服务器应该通知资源所有者该错误且不能向无效的重定向URI自动重定向用户代理。
 
 如果资源所有者拒绝访问请求，或者如果请求因为其他非缺失或无效重定向URI原因而失败，授权服务器通过按[附录B](../AppendixB/b.md)使用“application/x-www-form-urlencoded”格式向重定向URI的片段部分添加下列参数通知客户端：
diff --git a/Section04/4.2.2.md b/Section04/4.2.2.md
index 9f77f14..4b628fe 100644
--- a/Section04/4.2.2.md
+++ b/Section04/4.2.2.md
@@ -1,5 +1,5 @@
 ### 4.2.2 访问令牌响应
-=======================
+
 如果资源所有者许可访问请求，授权服务器颁发访问令牌，通过使用按[附录B](../AppendixB/b.md)的“application/x-www-form-urlencoded”格式向重定向URI的片段部分添加下列参数传递访问令牌至客户端：
 - access_token    
   必需的。授权服务器颁发的访问令牌。
diff --git a/Section04/4.2.md b/Section04/4.2.md
index b6a319b..5ec9c2e 100644
--- a/Section04/4.2.md
+++ b/Section04/4.2.md
@@ -1,5 +1,5 @@
 ## 4.2 隐式许可
-==================
+
 隐式授权类型被用于获取访问令牌（它不支持发行刷新令牌），并对知道操作具体重定向URI的公共客户端进行优化。这些客户端通常在浏览器中使用诸如JavaScript的脚本语言实现。
 
 由于这是一个基于重定向的流程，客户端必须能够与资源所有者的用户代理（通常是Web浏览器）进行交互并能够接收来自授权服务器的传入请求（通过重定向）。
diff --git a/Section04/4.3.1.md b/Section04/4.3.1.md
index 3f2a4fc..6f11996 100644
--- a/Section04/4.3.1.md
+++ b/Section04/4.3.1.md
@@ -1,3 +1,3 @@
 ### 4.3.1 授权请求和响应
-========================
+
 客户端获得资源所有者凭据所通过的方式超出了本规范的范围。一旦获得访问令牌，客户端必须丢弃凭据。
\ No newline at end of file
diff --git a/Section04/4.3.2.md b/Section04/4.3.2.md
index fb99392..13da8f6 100644
--- a/Section04/4.3.2.md
+++ b/Section04/4.3.2.md
@@ -1,5 +1,5 @@
 ### 4.3.2 访问令牌请求
-=================
+
 客户端通过使用按[附录B](../AppendixB/b.md)“application/x-www-form-urlencoded”格式在HTTP请求实体正文中发送下列UTF-8字符编码的参数向令牌端点发起请求：
 - grant_type    
   必需的。值必须设置为“password”。
diff --git a/Section04/4.3.3.md b/Section04/4.3.3.md
index 80e8021..68e782b 100644
--- a/Section04/4.3.3.md
+++ b/Section04/4.3.3.md
@@ -1,5 +1,5 @@
 ### 4.3.3 访问令牌响应
-=====================
+
 如果访问令牌请求是有效的且被授权，授权服务器如[5.1](../Section05/5.1.md)节所述颁发访问令牌以及可选的刷新令牌。如果请求客户端身份验证失败或无效，授权服务器如[5.2](../Section05/5.2.md)节所述的返回错误响应。
 一个样例成功响应：
 
diff --git a/Section04/4.3.md b/Section04/4.3.md
index f95d191..b494dc2 100644
--- a/Section04/4.3.md
+++ b/Section04/4.3.md
@@ -1,5 +1,5 @@
 ## 4.3 资源所有者密码凭据许可
-================================
+
 资源所有者密码凭据许可类型适合于资源所有者与客户端具有信任关系的情况，如设备操作系统或高级特权应用。当启用这种许可类型时授权服务器应该特别关照且只有当其他流程都不可用时才可以。
 
 这种许可类型适合于能够获得资源所有者凭据（用户名和密码，通常使用交互的形式）的客户端。通过转换已存储的凭据至访问令牌，它也用于迁移现存的使用如HTTP基本或摘要身份验证的直接身份验证方案的客户端至OAuth。
diff --git a/Section04/4.4.1.md b/Section04/4.4.1.md
index 9aa1d79..1e0a6b1 100644
--- a/Section04/4.4.1.md
+++ b/Section04/4.4.1.md
@@ -1,3 +1,3 @@
 ### 4.4.1 授权请求和响应
-=======================
+
 由于客户端身份验证被用作授权许可，所以不需要其他授权请求。
\ No newline at end of file
diff --git a/Section04/4.4.2.md b/Section04/4.4.2.md
index fc8ccda..a46d1ab 100644
--- a/Section04/4.4.2.md
+++ b/Section04/4.4.2.md
@@ -1,5 +1,5 @@
 ### 4.4.2 访问令牌请求
-======================
+
 客户端通过使用按附录B“application/x-www-form-urlencoded”格式在HTTP请求实体正文中发送下列UTF-8字符编码的参数向令牌端点发起请求：
 - grant_type    
   必需的。值必须设置为“client_credentials”。
diff --git a/Section04/4.4.3.md b/Section04/4.4.3.md
index d88e260..17392a2 100644
--- a/Section04/4.4.3.md
+++ b/Section04/4.4.3.md
@@ -1,5 +1,5 @@
 ### 4.4.3 访问令牌响应
-=========================
+
 如果访问令牌请求是有效的且被授权，授权服务器如[5.1](../Section05/5.1.md)节所述颁发访问令牌以及可选的刷新令牌。刷新令牌不应该包含在内。 如果请求因客户端身份验证失败或无效，授权服务器如[5.2](../Section05/5.2.md)节所述的返回错误响应。
 
 一个样例成功响应：
diff --git a/Section04/4.4.md b/Section04/4.4.md
index d20f4a9..745a0f7 100644
--- a/Section04/4.4.md
+++ b/Section04/4.4.md
@@ -1,5 +1,5 @@
 ## 4.4 客户端凭据许可
-==========================
+
 当客户端请求访问它所控制的，或者事先与授权服务器协商（所采用的方法超出了本规范的范围）的其他资源所有者的受保护资源，客户端可以只使用它的客户端凭据（或者其他受支持的身份验证方法）请求访问令牌。
 
 客户端凭据许可类型必须只能由机密客户端使用。
diff --git a/Section04/4.5.md b/Section04/4.5.md
index ab93368..4737133 100644
--- a/Section04/4.5.md
+++ b/Section04/4.5.md
@@ -1,5 +1,5 @@
 ## 4.5 扩展许可
-====================
+
 通过使用绝对URI作为令牌端点的“grant_type”参数的值指定许可类型，并通过添加任何其他需要的参数，客户端使用扩展许可类型。
 
 例如，采用[OAuth-SAML]定义的安全断言标记语言（SAML）2.0断言许可类型请求访问令牌，客户端可以使用TLS发起如下的HTTP请求（额外的换行仅用于显示目的）：
diff --git a/Section04/4.md b/Section04/4.md
index 2c0ec4c..3043a6e 100644
--- a/Section04/4.md
+++ b/Section04/4.md
@@ -1,5 +1,5 @@
 # 4 获得授权
-===================
+
 为了请求访问令牌，客户端从资源所有者获得授权。授权表现为授权许可的形式，客户端用它请求访问令牌。OAuth定义了四种许可类型：授权码、隐式许可、资源所有者密码凭据和客户端凭据。它还提供了扩展机制定义其他许可类型。
 
 - 4.1. [授权码许可](4.1.md)
diff --git a/Section05/5.1.md b/Section05/5.1.md
index 1015ca6..bd479b0 100644
--- a/Section05/5.1.md
+++ b/Section05/5.1.md
@@ -1,5 +1,5 @@
 ## 5.1 成功的响应
-============================
+
 授权服务器颁发访问令牌和可选的刷新令牌，通过向HTTP响应实体正文中添加下列参数并使用200（OK）状态码构造响应：
 - access_token    
   必需的。授权服务器颁发的访问令牌。
diff --git a/Section05/5.2.md b/Section05/5.2.md
index ea1e0ba..8541e9f 100644
--- a/Section05/5.2.md
+++ b/Section05/5.2.md
@@ -1,5 +1,5 @@
 ## 5.2 错误响应
-================
+
 授权服务器使用HTTP 400（错误请求）状态码响应，在响应中包含下列参数：
 - error
   必需的。下列ASCII[USASCII]错误代码之一：
diff --git a/Section05/5.md b/Section05/5.md
index 82db0a0..778269c 100644
--- a/Section05/5.md
+++ b/Section05/5.md
@@ -1,5 +1,5 @@
 # 5 颁发访问令牌
-========================
+
 如果访问令牌请求是有效的且被授权，授权服务器如5.1节所述颁发访问令牌以及可选的刷新令牌。如果请求因客户端身份验证失败或无效，授权服务器如5.2节所述的返回错误响应。
 
 - 5.1. [成功响应](5.1.md)
diff --git a/Section06/6.md b/Section06/6.md
index c0c9be1..301d4f0 100644
--- a/Section06/6.md
+++ b/Section06/6.md
@@ -1,5 +1,5 @@
 # 6 刷新访问令牌
-==================
+
 若授权服务器给客户端颁发了刷新令牌，客户端通过使用按[附录B](../AppendixB/b.md)“application/x-www-form-urlencoded”格式在HTTP请求实体正文中发送下列UTF-8字符编码的参数向令牌端点发起刷新请求：
 - grant_type    
   必需的。值必须设置为“refresh_token”。
diff --git a/Section07/7.1.md b/Section07/7.1.md
index e09c0d4..d6a3059 100644
--- a/Section07/7.1.md
+++ b/Section07/7.1.md
@@ -1,5 +1,5 @@
 ## 7.1 访问令牌类型
-=====================
+
 访问令牌的类型给客户端提供了成功使用该访问令牌（和类型指定的属性）发起受保护资源请求所需的信息 若客户端不理解令牌类型，则不能使用该访问令牌。
 
 例如，[RFC6750][RFC6750]定义的“bearer”令牌类型简单的在请求中包含访问令牌字符串来使用：
diff --git a/Section07/7.2.md b/Section07/7.2.md
index 792b07e..4696dbb 100644
--- a/Section07/7.2.md
+++ b/Section07/7.2.md
@@ -1,5 +1,5 @@
 ## 7.2 错误响应
-====================
+
 如果资源访问请求失败，资源服务器应该通知客户端该错误。虽然规定这些错误响应超出了本规范的范围，但是本文档在[11.4](../Section11/11.4.md)节建立了一张公共注册表，用作OAuth令牌身份验证方案之间分享的错误值。
 
 主要为OAuth令牌身份验证设计的新身份验证方案应该定义向客户端提供错误状态码的机制，其中允许的错误值限于本规范建立的错误注册表中。
diff --git a/Section07/7.md b/Section07/7.md
index d7ea5cb..fa77e5d 100644
--- a/Section07/7.md
+++ b/Section07/7.md
@@ -1,5 +1,5 @@
 # 7 访问受保护资源
-=================
+
 通过向资源服务器出示访问令牌，客户端访问受保护资源。资源服务器必须验证访问令牌，并确保它没有过期且其范围涵盖了请求的资源。资源服务器用于验证访问令牌的方法（以及任何错误响应）超出了本规范的范围，但一般包括资源服务器和授权服务器之间的互动或协调。
 
 客户端使用访问令牌与资源服务器进行证认的方法依赖于授权服务器颁发的访问令牌的类型。通常，它涉及到使用具有所采用的访问令牌类型的规范定义的身份验证方案(如[RFC6750][RFC6750])的HTTP“Authorization”的请求标头字段[RFC2617][RFC2617]。
diff --git a/Section08/8.1.md b/Section08/8.1.md
index d932fb3..13a83b9 100644
--- a/Section08/8.1.md
+++ b/Section08/8.1.md
@@ -1,5 +1,5 @@
 ## 8.1 定义访问令牌类型
-===========================
+
 访问令牌类型可以用以下两种方法之一来定义：在访问令牌类型注册表中注册（按[11.1](../Section11/11.1.md)节中的过程）的，或者通过使用一个唯一的绝对URI作为它的名字。
 
 采用URI命名的类型应该限定于特定供应商的实现，它们不是普遍适用的并且特定于使用它们的资源服务器的实现细节。
diff --git a/Section08/8.2.md b/Section08/8.2.md
index a489417..8510c70 100644
--- a/Section08/8.2.md
+++ b/Section08/8.2.md
@@ -1,5 +1,5 @@
 ## 8.2 定义新的端点参数
-====================
+
 用于授权端点或令牌端点的新的请求或响应参数按照[11.2](../Section11/11.2.md)节中的过程在OAuth参数注册表中定义和注册。
 
 参数名称必须符合param-name ABNF，并且参数值的语法必须是明确定义的（例如，使用ABNF，或现有参数的语法的引用）。
diff --git a/Section08/8.3.md b/Section08/8.3.md
index 2620005..14fb9e4 100644
--- a/Section08/8.3.md
+++ b/Section08/8.3.md
@@ -1,3 +1,3 @@
 ## 8.3 定义新的授权许可类型
-======================
+
 新的授权许可类型可以通过赋予它们一个“grant_type”参数使用的唯一的绝对URI来定义。如果扩展许可类型需要其他令牌端点参数，它们必须如[11.2](../Section11/11.2.md)节所述在OAuth参数注册表中注册。
\ No newline at end of file
diff --git a/Section08/8.4.md b/Section08/8.4.md
index 57c16a5..438340d 100644
--- a/Section08/8.4.md
+++ b/Section08/8.4.md
@@ -1,5 +1,5 @@
 ## 8.4 定义新的授权端点响应类型
-==================================
+
 用于授权端点的新的响应类型按照[11.3](../Section11/11.3.md)节中的过程在授权端点响应类型注册表中定义和注册。响应类型名称必须符合response-type ABNF。
 
     response-type  = response-name *( SP response-name )
diff --git a/Section08/8.5.md b/Section08/8.5.md
index ada45ec..797d393 100644
--- a/Section08/8.5.md
+++ b/Section08/8.5.md
@@ -1,5 +1,5 @@
 ## 8.5 定义其他错误代码
-=============================
+
 在协议扩展（例如，访问令牌类型、扩展参数或扩展许可类型等）需要其他错误代码用于授权码许可错误响应（[4.1.2.1](../Section04/4.1.2.1.md)节）、隐式许可错误响应（[4.2.2.1](../Section04/4.2.2.1.md)节）、令牌错误响应（[5.2](../Section5.2.md)节）或资源访问错误响应（[7.2](../Section07/7.2.md)节）的情况下，这些错误代码可以被定义。
 
 如果用于与它们配合的扩展是已注册的访问令牌类型，已注册的端点参数或者扩展许可类型，扩展错误代码必须被注册。用于未注册扩展的错误代码可以被注册。
diff --git a/Section08/8.md b/Section08/8.md
index e9c287f..f1fb2ec 100644
--- a/Section08/8.md
+++ b/Section08/8.md
@@ -1,5 +1,4 @@
 # 8 可扩展性
-=============
 
 - 8.1. [定义访问令牌类型](8.1.md)
 - 8.2. [定义新的端点参数](8.2.md)
diff --git a/Section09/9.md b/Section09/9.md
index 68c571a..331dd3f 100644
--- a/Section09/9.md
+++ b/Section09/9.md
@@ -1,5 +1,5 @@
 # 9 本机应用程序
-=====================
+
 本机应用程序是安装和执行在资源所有者使用的设备上的客户端（例如，桌面程序，本机移动应用）。本机应用程序需要关于安全、平台能力和整体最终用户体验的特别注意事项。
 
 授权端点需要在客户端和资源所有者用户代理之间进行交互。本机应用程序可以调用外部的用户代理，或在应用程序中嵌入用户代理。例如：
diff --git a/Section10/10.1.md b/Section10/10.1.md
index 0ed432c..b1f6829 100644
--- a/Section10/10.1.md
+++ b/Section10/10.1.md
@@ -1,5 +1,5 @@
 ## 10.1 客户端身份验证
-=====================
+
 授权服务器为进行客户端身份验证的目的，为Web应用客户端创建客户端凭据。授权服务器被鼓励考虑比客户端密码更强的客户端身份验证手段。Web应用程序客户端必须确保客户端密码和其他客户端凭据的机密性。
 
 授权不得向本地应用程序或基于用户代理的应用客户端颁发客户端密码或其他客户端凭据用于客户端验证目的。授权服务器可以颁发客户端密码或其他凭据给专门的设备上特定安装的本地应用程序客户端。
diff --git a/Section10/10.10.md b/Section10/10.10.md
index d8b534a..67f6ff7 100644
--- a/Section10/10.10.md
+++ b/Section10/10.10.md
@@ -1,5 +1,5 @@
 ## 10.10 凭据猜测攻击
-=================
+
 授权服务器必须防止攻击者猜测访问令牌、授权码、刷新令牌、资源所有者密码和客户端凭据。
 
 攻击者猜测已生成令牌（和其它不打算被最终用户掌握的凭据）的概率必须小于或等于2 ^（-128），并且应该小于或等于2 ^（-160）。
diff --git a/Section10/10.11.md b/Section10/10.11.md
index 4aa1e24..035b533 100644
--- a/Section10/10.11.md
+++ b/Section10/10.11.md
@@ -1,5 +1,5 @@
 ## 10.11 钓鱼攻击
-==================
+
 本协议或类似协议的广泛部署，可能导致最终用户变成习惯于被重定向到要求输入他们的密码的网站的做法。
 
 如果最终用户在输入他们的凭据前不注意辨别这些网站的真伪，这将使攻击者利用这种做法窃取资源所有者的密码成为可能。
diff --git a/Section10/10.12.md b/Section10/10.12.md
index ee3fb27..b4ca967 100644
--- a/Section10/10.12.md
+++ b/Section10/10.12.md
@@ -1,5 +1,5 @@
 ## 10.12 跨站请求伪造
-=======================
+
 跨站请求伪造（CSRF）是一种漏洞利用，攻击者致使受害的最终用户按恶意URI（例如以误导的链接、图片或重定向提供给用户代理）到达受信任的服务器（通常由存在有效的会话Cookie而建立）。
 
 针对客户端的重定向URI的CSRF攻击允许攻击者注入自己的授权码或访问令牌，这将导致在客户端中使用与攻击者的受保护资源关联的访问令牌而非受害者的（例如，保存受害者的银行账户信息到攻击者控制的受保护资源）。
diff --git a/Section10/10.13.md b/Section10/10.13.md
index 4da0dd6..38f3423 100644
--- a/Section10/10.13.md
+++ b/Section10/10.13.md
@@ -1,5 +1,5 @@
 ## 10.13 点击劫持
-===================
+
 在点击劫持攻击中，攻击者注册一个合法客户端然后构造一个恶意站点，在一个透明的覆盖在一组虚假按钮上面的嵌入框架中加载授权服务器的授权端点Web页面，这些按钮被精心构造恰好放置在授权页面上的重要按钮下方。当最终用户点击了一个误导的可见的按钮时，最终用户实际上点击了授权页面上一个不可见的按钮（例如“授权”按钮）。 这允许攻击者欺骗资源所有者许可它的客户端最终用户不知晓的访问权限。
 
 为了防止这种形式的攻击，在请求最终用户授权时本机应用程序应该使用外部浏览器而非应用程序中嵌入的浏览器。 对于大多数较新的浏览器，避免嵌入框架可以由授权服务器使用（非标准的）“x-frame-options”标头实施。 该标头可以有两个值，“deny”和“sameorigin”，它将阻止任何框架，或按不同来源的站点分别构造框架。 对于较旧的浏览器，JavaScript框架破坏技术可以使用，但可能不会在所有的浏览器中生效。
\ No newline at end of file
diff --git a/Section10/10.14.md b/Section10/10.14.md
index 107f78c..090068b 100644
--- a/Section10/10.14.md
+++ b/Section10/10.14.md
@@ -1,5 +1,5 @@
 ## 10.14 代码注入和输入验证
-=================
+
 代码注入攻击当程序使用的输入或其他外部变量未清洗而导致对程序逻辑的修改时发生。 这可能允许攻击者对应用程序的设备或它的数据的访问权限，导致服务拒绝或引入许多的恶意副作用。
 
 授权服务器和客户端必须清洗（并在可能的情况下验证）收到的任何值--特别是，“state”和“redirect_uri”参数的值。
\ No newline at end of file
diff --git a/Section10/10.15.md b/Section10/10.15.md
index 8e09bc1..1c6e3f7 100644
--- a/Section10/10.15.md
+++ b/Section10/10.15.md
@@ -1,5 +1,5 @@
 ## 10.15 自由重定向器
-=====================
+
 授权服务器、授权端点和客户端重定向端点可能被不当配置，被作为自由重定向器。自由重定向器是一个使用参数自动地向参数值指定而无任何验证的地址重定向用户代理的端点。
 
 自由重定向器可被用于钓鱼攻击，或者被攻击者通过使用熟悉的受信任的目标地址的URI授权部分使最终用户访问恶意站点。此外，如果授权服务器允许客户端只注册部分的重定向URI，攻击者可以使用客户端操作的自由重定向器构造重定向URI，这将跳过授权服务器验证但是发送授权码或访问令牌给攻击者控制下的端点。
\ No newline at end of file
diff --git a/Section10/10.16.md b/Section10/10.16.md
index 28d90c7..db0ea02 100644
--- a/Section10/10.16.md
+++ b/Section10/10.16.md
@@ -1,5 +1,5 @@
 ## 10.16 在隐式流程中滥用访问令牌假冒资源所有者
-==============================
+
 对于使用隐式流程的公共客户端，本规范没有为客户端提供任何方法来决定访问令牌颁发给的是什么样的客户端。
 
 资源所有者可能通过给攻击者的恶意客户端许可访问令牌自愿委托资源的访问权限。这可能是由于钓鱼或一些其他借口。攻击者也可能通过其他机制窃取令牌。 攻击者然后可能会尝试通过向合法公开客户端提供该访问令牌假冒资源拥有者。
diff --git a/Section10/10.2.md b/Section10/10.2.md
index c008808..ee1b31e 100644
--- a/Section10/10.2.md
+++ b/Section10/10.2.md
@@ -1,5 +1,5 @@
 ## 10.2 客户端仿冒
-======================
+
 如果被仿冒的客户端不能，或无法保持其客户端凭据保密。恶意客户端可能冒充其他客户端，并获得对受保护资源的访问权限。
 
 授权服务器任何可能的时候必须验证客户端身份。如果授权服务器由于客户端的性质无法对客户端进行身份验证，授权服务器必须要求注册任何用于接收授权响应的重定向URI并且应该利用其他手段保护资源所有者防止这样的潜在仿冒客户端。例如，授权服务器可以引入资源所有者来帮助识别客户端和它的来源。
diff --git a/Section10/10.3.md b/Section10/10.3.md
index 5577bf5..082521e 100644
--- a/Section10/10.3.md
+++ b/Section10/10.3.md
@@ -1,5 +1,5 @@
 ## 10.3 访问令牌
-======================
+
 访问令牌凭据（以及任何机密的访问令牌属性）在传输和储存时必须保持机密性，并只与授权服务器、访问令牌生效的资源服务器和访问令牌被颁发的客户端共享。访问令牌凭据必须只能使用带有[RFC2818][RFC2818]定义的服务器身份验证的[1.6](../Section01/1.6.md)节所述的TLS 传输。
 
 当使用隐式授权许可类型时，访问令牌在URI片段中传输，这可能泄露访问令牌给未授权的一方。
diff --git a/Section10/10.4.md b/Section10/10.4.md
index 447e36f..bfdb176 100644
--- a/Section10/10.4.md
+++ b/Section10/10.4.md
@@ -1,5 +1,5 @@
 ## 10.4 刷新令牌
-==================
+
 授权服务器可以给Web应用客户端和本机应用程序客户端颁发刷新令牌。
 
 刷新令牌在传输和储存时必须保持机密性，并只与授权服务器和刷新令牌被颁发的客户端共享。授权服务器必须维护刷新令牌和它被颁发给的客户端之间的绑定。刷新令牌必须只能使用带有[RFC2818][RFC2818]定义的服务器身份验证的[1.6](../Section01/1.6.md)所述的TLS 传输。
diff --git a/Section10/10.5.md b/Section10/10.5.md
index 593f45e..88a6014 100644
--- a/Section10/10.5.md
+++ b/Section10/10.5.md
@@ -1,5 +1,5 @@
 ## 10.5 授权码
-====================
+
 授权码的传输应该建立在安全通道上，客户端应该要求在它的重定向URI上使用TLS，若该URI指示了一个网络资源。 由于授权码由用户代理重定向传输，它们可能潜在地通过用户代理历史记录和HTTP参照标头被泄露。
 
 授权码明以纯文本承载凭据使用，用于验证在授权服务器许可权限的资源所有者就是返回到客户端完成此过程的相同的资源所有者。因此，如果客户端依赖于授权码作为它自己的资源所有者身份验证，客户端重定向端点必须要求使用TLS。
diff --git a/Section10/10.6.md b/Section10/10.6.md
index 4e220fb..4874176 100644
--- a/Section10/10.6.md
+++ b/Section10/10.6.md
@@ -1,5 +1,5 @@
 ## 10.6 授权码重定向URI伪造
-==========================
+
 当使用授权码许可类型请求授权时，客户端可以通过“redirect_uri”参数指定重定向URI。 如果攻击者能够伪造重定向URI的值，这可能导致授权服务器向攻击者控制的URI重定向带有授权码的资源所有者用户代理。
 
 攻击者可以在合法客户端上创建一个帐户，并开始授权流程。当攻击者的用户代理被发送到授权服务器来许可访问权限时，攻击者抓取合法客户端提供的授权URI并用攻击者控制下的URI替换客户端的重定向URI。 攻击者然后欺骗受害者顺着仿冒的链接来对合法客户端授权访问权限。
diff --git a/Section10/10.8.md b/Section10/10.8.md
index 423506f..2621244 100644
--- a/Section10/10.8.md
+++ b/Section10/10.8.md
@@ -1,5 +1,5 @@
 ## 10.8 请求机密性
-====================
+
 访问令牌、刷新令牌、资源所有者密码和客户端凭据不能以明文传输。授权码不应该以明文传输。
 
 “state”和“scope”参数不应该包含敏感的客户端或资源所有者的纯文本信息，因为它们可能在不安全的通道上被传输或被不安全地存储。
\ No newline at end of file
diff --git a/Section10/10.9.md b/Section10/10.9.md
index 6628e0d..6aacd36 100644
--- a/Section10/10.9.md
+++ b/Section10/10.9.md
@@ -1,5 +1,5 @@
 ## 10.9 确保端点真实性
-=====================
+
 为了防止中间人攻击，授权服务器必须对任何被发送到授权和令牌端点的请求要求[RFC2818][RFC2818]中定义的具有服务器身份验证的TLS 的使用。客户端必须按[RFC6125][RFC6125]定义且按照它服务器身份进行身份验证的需求验证授权服务器的的TLS证书。
 
 [RFC2818]: http://tools.ietf.org/html/rfc2818 "HTTP Over TLS"
diff --git a/Section10/10.md b/Section10/10.md
index 917993a..ae40609 100644
--- a/Section10/10.md
+++ b/Section10/10.md
@@ -1,5 +1,5 @@
 # 10 安全考量
-====================
+
 作为一个灵活的可扩展的框架，OAuth的安全性考量依赖于许多因素。 以下小节提为实现者提供了聚焦在[2.1](../Section02/2.1.md)节所述的三种客户端配置上的安全指南：Web应用、基于用户代理的应用和本地应用程序。
 
 全面的OAuth安全模型和分析以及该协议设计的背景在[OAuth-THREATMODE]中提供。
diff --git a/Section11/11.1.1.md b/Section11/11.1.1.md
index 1e266b1..b17e4de 100644
--- a/Section11/11.1.1.md
+++ b/Section11/11.1.1.md
@@ -1,5 +1,5 @@
 ### 11.1.1 注册模板
-=======================
+
 - Type name：
 
   请求的名称（例如，“example”）。
diff --git a/Section11/11.1.md b/Section11/11.1.md
index 5efbc30..e9c7a7b 100644
--- a/Section11/11.1.md
+++ b/Section11/11.1.md
@@ -1,5 +1,5 @@
 ## 11.1 OAuth访问令牌类型注册表
-===========================
+
 本规范建立OAuth访问令牌类型注册表。
 
 在oauth-ext-review@ietf.org邮件列表上的两周的审查期后，根据一位或多位指定的专家的建议下，按规范需求（[RFC5226][RFC5226]）注册访问令牌类型。然而，为允许发表之前的值的分配，指定的专家（们）一旦他们对这样的规范即将发布感到满意可以同意注册。
diff --git a/Section11/11.2.1.md b/Section11/11.2.1.md
index 6e8f1a6..8028e47 100644
--- a/Section11/11.2.1.md
+++ b/Section11/11.2.1.md
@@ -1,5 +1,5 @@
 ### 11.2.1 注册模板
-================
+
 - Parameter name:
 
   请求的名称（例如，“example”）。
diff --git a/Section11/11.2.2.md b/Section11/11.2.2.md
index 991103a..b31307f 100644
--- a/Section11/11.2.2.md
+++ b/Section11/11.2.2.md
@@ -1,96 +1,81 @@
 ### 11.2.2 最初的注册表内容
-=======================
+
 OAuth参数注册表中的初始内容：
 - Parameter name: client_id
 - Parameter usage location: authorization request, token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: client_secret
 - Parameter usage location: token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: response_type
 - Parameter usage location: authorization request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: redirect_uri
 - Parameter usage location: authorization request, token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: scope
 - Parameter usage location: authorization request, authorization response, token request, token response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: state
 - Parameter usage location: authorization request, authorization response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: code
 - Parameter usage location: authorization response, token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: error_description
 - Parameter usage location: authorization response, token response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: error_uri
 - Parameter usage location: authorization response, token response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: grant_type
 - Parameter usage location: token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: access_token
 - Parameter usage location: authorization response, token response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: token_type
 - Parameter usage location: authorization response, token response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: expires_in
 - Parameter usage location: authorization response, token response
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: username
 - Parameter usage location: token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: password
 - Parameter usage location: token request
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Parameter name: refresh_token
 - Parameter usage location: token request, token response
 - Change controller: IETF
diff --git a/Section11/11.2.md b/Section11/11.2.md
index d2004f8..4a325f8 100644
--- a/Section11/11.2.md
+++ b/Section11/11.2.md
@@ -1,5 +1,5 @@
 ## 11.2 OAuth参数注册表
-=======================
+
 本规范建立OAuth参数注册表。
 
 在oauth-ext-review@ietf.org邮件列表上的两周的审查期后，根据一位或多位指定的专家的建议下，按规范需求（[RFC5226][RFC5226]）注册列入授权端点请求、授权端点响应、令牌端点请求或令牌端点响应的其他参数。然而，为允许发表之前的值的分配，指定的专家（们）一旦他们对这样的规范即将发布感到满意可以同意注册。
diff --git a/Section11/11.3.1.md b/Section11/11.3.1.md
index fa7a5c1..e36eb86 100644
--- a/Section11/11.3.1.md
+++ b/Section11/11.3.1.md
@@ -1,5 +1,5 @@
 ### 11.3.1 注册模板
-=================
+
 - Response type name:
 
   请求的名称（例如，“example”）。
diff --git a/Section11/11.3.2.md b/Section11/11.3.2.md
index 866a083..951ca88 100644
--- a/Section11/11.3.2.md
+++ b/Section11/11.3.2.md
@@ -1,11 +1,10 @@
 ### 11.3.2 最初的注册表内容
-=======================
+
 OAuth授权端点响应类型注册表的初始内容：
 - Response type name: code
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
 
-
 - Response type name: token
 - Change controller: IETF
 - Specification document(s): [RFC 6749][RFC6749]
diff --git a/Section11/11.3.md b/Section11/11.3.md
index d0422cc..6a36a40 100644
--- a/Section11/11.3.md
+++ b/Section11/11.3.md
@@ -1,5 +1,5 @@
 ## 11.3 OAuth授权端点响应类型注册表
-================
+
 本规范建立OAuth授权端点响应类型注册表。
 
 在oauth-ext-review@ietf.org邮件列表上的两周的审查期后，根据一位或多位指定的专家的建议下，按规范需求（[RFC5226][RFC5226]）注册授权端点使用的其他响应类型。然而，为允许发表之前的值的分配，指定的专家（们）一旦他们对这样的规范即将发布感到满意可以同意注册。
diff --git a/Section11/11.4.1.md b/Section11/11.4.1.md
index c78030a..d4f97e9 100644
--- a/Section11/11.4.1.md
+++ b/Section11/11.4.1.md
@@ -1,5 +1,5 @@
 ### 11.4.1 注册模板
-====================
+
 - Error name:
 
   请求的名称（例如，“example”）。错误名称的值
diff --git a/Section11/11.4.md b/Section11/11.4.md
index d2e2fae..9764ae1 100644
--- a/Section11/11.4.md
+++ b/Section11/11.4.md
@@ -1,5 +1,5 @@
 ## 11.4 OAuth扩展错误注册表
-====================
+
 本规范建立OAuth扩展错误注册表。
 
 在oauth-ext-review@ietf.org邮件列表上的两周的审查期后，根据一位或多位指定的专家的建议下，按规范需求（[RFC5226][RFC5226]）注册与其他协议扩展（例如，扩展的许可类型、访问令牌类型或者扩展参数）一起使用的其他错误代码。然而，为允许发表之前的值的分配，指定的专家（们）一旦他们对这样的规范即将发布感到满意可以同意注册。
diff --git a/Section11/11.md b/Section11/11.md
index 2bb481a..74a303e 100644
--- a/Section11/11.md
+++ b/Section11/11.md
@@ -1,5 +1,4 @@
 # 11 IANA考量
-=================
 
 - 11.1. [OAuth访问令牌类型注册表](11.1.md)
 - 11.1.1. [注册模板](11.1.1.md)
diff --git a/Section12/12.1.md b/Section12/12.1.md
index d5aaf19..a34a356 100644
--- a/Section12/12.1.md
+++ b/Section12/12.1.md
@@ -1,5 +1,5 @@
 ## 12.1 规范性参考文件
-====================
+
 - [RFC2119]
   Bradner, S., "Key words for use in RFCs to Indicate Requirement Levels", BCP 14,RFC 2119, March 1997.
 - [RFC2246]
diff --git a/Section12/12.2.md b/Section12/12.2.md
index 6b6e76a..fb60a0b 100644
--- a/Section12/12.2.md
+++ b/Section12/12.2.md
@@ -1,5 +1,5 @@
 ## 12.2 参考性引用文献
-====================
+
 - [OAuth-HTTP-MAC]
   Hammer-Lahav, E., Ed., "HTTP Authentication: MAC Access Authentication", Work in Progress, February 2012.
 - [OAuth-SAML2]
diff --git a/Section12/12.md b/Section12/12.md
index 90c3fdd..b37dbc6 100644
--- a/Section12/12.md
+++ b/Section12/12.md
@@ -1,5 +1,4 @@
 # 12 参考文献
-=================
 
 - 12.1. [规范性文献](12.1.md)
 - 12.2. [参考性文献](12.2.md)
\ No newline at end of file
